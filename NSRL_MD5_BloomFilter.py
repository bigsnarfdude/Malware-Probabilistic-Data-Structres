import pybloomfilter


'''
BloomFilters save space - Millions of NSRL MD5s in 17megabytes instead of 2.6gigs

In [44]: ls -la NSRLGood.bloomfilter
-rwxr-xr-x  1 antigen  staff  17973266 12 Mar 13:15 NSRLGood.bloomfilter

In [45]: ls -la NSRLFile.txt
-r--r--r--@ 1 antigen  staff  2611139266 30 Jan 14:00 NSRLFile.txt
'''


filename = 'NSRLFile.txt'
hash_list = []
bloomfilter_filename = 'NSRLGood.bloomfilter'
error_rate = 0.001
size = 10000000

def stream_lines(filename):
    file = open(filename)
    while True:
        line = file.readline()
        if not line:
            file.close()
            break
        yield line.split(",")[1].strip('"')

def process_infile(hashes, hash_list):
    for item in hashes:
        hash_list.append(item)

NSRL_good = pybloomfilter.BloomFilter(
                    size, 
                    error_rate, 
                    bloomfilter_filename
                )
hashes = stream_lines(filename)
process_infile(hashes, hash_list)
NSRL_good.update(hash_list)

"F16FF81271ADA49847E6EB6BB9CB8A90" in NSRL_good # positive
'testTESTtest' in NSRL_good # false