import pybloomfilter

'''
Bloom Filters save space - Millions of Manadiants MD5s in 61K instead of 57megs

In [137]: ls -la mandiantGood.bloom
-rwxr-xr-x  1 antigen  staff  61187 12 Mar 10:08 mandiantGood.bloomfilter

In [138]: ls -la m-whitelist-1.0.txt
-rwx------  1 antigen  staff  57304863  6 Jul  2012 m-whitelist-1.0.txt
'''


filename = 'm-whitelist-1.0.txt'
hash_list = []
bloomfilter_filename = 'mandiantGood.bloomfilter'
error_rate = 0.001
size = 100000000

def stream_lines(filename):
    file = open(filename)
    while True:
        line = file.readline()
        if not line:
            file.close()
            break
        yield line.strip()

def process_infile(hashes, hash_list):
    for item in hashes:
        hash_list.append(item)

mandiant_good = pybloomfilter.BloomFilter(
                    size, 
                    error_rate, 
                    bloomfilter_filename
                )
hashes = stream_lines(filename)
process_infile(hashes, hash_list)
mandiant_good.update(hash_list)

'512bd15c8f84cc7a98f0344a0c73e018' in mandiant_good # positive
'testTESTtest' in mandiant_good # false
